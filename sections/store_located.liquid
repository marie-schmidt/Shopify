<style>
   #pac-input{min-width: 250px;margin-top:9px;}
</style>
{% if section.settings.enable_mapcontacts %}
{% unless min_height %}
  {% assign min_height = "600px" %}
{% endunless %}
{% assign data = "" %}
{% assign sep = "" %}
{%- for block in section.blocks -%}
   {% if block.settings.map_title.size > 0 and block.settings.map_address.size > 0 %}
       {% assign lat = block.settings.map_lat | plus:0 %}
       {% assign long = block.settings.map_long | plus:0 %}
       {% if lat != 0 and long != 0 %}
            {% if data.size > 0 %}
               {% assign sep = ',' %}
            {% endif %}
           {% assign name = block.settings.map_title | escape %}
           {% assign address = block.settings.map_address | escape %}
           {% assign data = data | append: sep| append: '{"id_store":"1", "name":"' | append: name | append: '",'%}
           {% assign data = data | append: '"address":"' | append: address | append: '", "latitude":"' | append: block.settings.map_lat | append: '",' %}
           {% assign data = data | append: '"longitude":"' | append: block.settings.map_long | append: '"}' %}
       {% endif %}
   {% endif %}
{% endfor %}
<div class="block-section lazyload ">
  <div  class="block_content ">
  	   
      <div id="google-maps" class="block google-maps" style="width: 100%; min-height:{{ min_height }}; clear:both;">
         <div class="gmap-cover display-list-store">
            <div class="gmap-content">
            	  <input id="pac-input" class="controls" type="text" placeholder="Search Box">
               <div id="map-canvas" class="gmap" style="min-height:{{ min_height }}; width:100%; height: 100%;"></div>
            </div>
         </div>
         <script type="text/javascript" src="https://maps.google.com/maps/api/js?key=AIzaSyBhs1cB2X0lOuHcCWkqNmloXbzUc2cSaS8&amp;amp;sensor=true&amp;amp;region=US&amp;amp;sensor=false&libraries=places" ></script>
         <script type="text/javascript">
              var dataMarkers = [{{ data }}];
              var latitude = (dataMarkers.length > 0 ? parseFloat(dataMarkers[0].latitude) : 45.422230);
              var longitude = (dataMarkers.length > 0 ? parseFloat(dataMarkers[0].longitude) : -75.692413);
              var infowindow = null;
              var map = "";
              var markers = [];
              var infoWindow = "";
              var zoom = {% if section.settings.map_zoom %}{{ section.settings.map_zoom}} {% else %}8{% endif %};
              
              function displayAMarker(data, obj, id) {
                  var m = markers[id];
                  google.maps.event.trigger(m, 'click');
              }
              function initializeListStore(data, name) {
                  var obj = $("#" + name + " ul");
                  synSize(name);
                  for(var i = 0; i < data.length; i++) {
                      var s = data[i];
                      obj.append("<li class='item-gmap-store' marker-id='" + i + "'" 
                              + "onclick='return displayAMarker(dataMarkers, this, " + i + ");'>"
                              + "<strong><b><span class='icon-map-marker'></span> "
                              + s.name + "</b></strong><br/><text>" + s.address + "</text>");
                  }
              }
              function initializeGmap(map, data, markers, nameGmap, zoom) {
                  map = new google.maps.Map(document.getElementById(nameGmap), {
                      center: new google.maps.LatLng(latitude, longitude),
                      zoom: zoom,
                      mapTypeId: 'roadmap',
                      {% if section.settings.style_map != blank %}styles:{{section.settings.style_map}}{% endif %}
                  });
                  setTimeout(createMarkers(map, markers, data), 1500);
                  // Create the search box and link it to the UI element.
                 var input = /** @type {HTMLInputElement} */(
                     document.getElementById('pac-input'));
                 map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                 var searchBox = new google.maps.places.SearchBox(
                   /** @type {HTMLInputElement} */(input));

                 // [START region_getplaces]
                 // Listen for the event fired when the user selects an item from the
                 // pick list. Retrieve the matching places for that item.
                 google.maps.event.addListener(searchBox, 'places_changed', function() {
                   var places = searchBox.getPlaces();

                   if (places.length == 0) {
                     return;
                   }
                   for (var i = 0, marker; marker = markers[i]; i++) {
                     marker.setMap(null);
                   }

                   // For each place, get the icon, place name, and location.
                   markers = [];
                   var bounds = new google.maps.LatLngBounds();
                   for (var i = 0, place; place = places[i]; i++) {
                     var image = {
                       url: place.icon,
                       size: new google.maps.Size(71, 71),
                       origin: new google.maps.Point(0, 0),
                       anchor: new google.maps.Point(17, 34),
                       scaledSize: new google.maps.Size(25, 25)
                     };

                     // Create a marker for each place.
                     var marker = new google.maps.Marker({
                       map: map,
                       icon: image,
                       title: place.name,
                       position: place.geometry.location
                     });

                     markers.push(marker);

                     bounds.extend(place.geometry.location);
                   }

                   map.fitBounds(bounds);
                 });
              };
              function createMarkers(map, markers, data) {
                  for (var i = 0; i < data.length; i++) {
                      var obj = data[i];
                      var lg = parseFloat(obj.longitude);
                      var lt = parseFloat(obj.latitude);
                      var name = obj.name;
                      var address = obj.address;

                      var latlng = new google.maps.LatLng(lt, lg);
                      var html = "<div style='min-width:200px;'><b>" + name + "</b><br/><br/>" + address; 
                      html += "<hr/><a href='https://maps.google.com/maps?saddr=&daddr=" + latlng + "' target='_blank'>Get directions<\/a>";
                      html += "</div>"; 

                      infowindow = new google.maps.InfoWindow({
                          content: "loading..."
                      });

                      var marker = new google.maps.Marker({
                          position: new google.maps.LatLng(lt, lg), 
                          animation: google.maps.Animation.DROP, 
                          map: map,
                          //icon: img_ps_dir + logo_store,
                          title: obj.name,
                          html: html
                      });

                      google.maps.event.addListener(marker, "click", function () {
                          infowindow.setContent(this.html);
                          infowindow.open(map, this);
                      });
                      markers[i] = marker;
                  }
              }
              function synSize(name) {
                  var obj = $("#" + name);
                  var div = $(obj).closest(".gmap-cover");
                  var gmap = $(div).find(".gmap");
                  $(obj).height($(gmap).height());
                  //console.log($(gmap).height());
              }
              $(function() {
                  console.log(dataMarkers.length);
                  if(dataMarkers.length <= 1) {
                      $(".gmap-content").attr("class", "gmap-content");
                      $(".gmap-stores-content").css("display", "none");
                  }
                  initializeGmap(map, dataMarkers, markers, "map-canvas", zoom);
                  initializeListStore( dataMarkers, "gmap-stores-list");
              });
          </script>
          
      </div>
   </div>
</div>
{% endif %}

{% schema %}
{
  "name": "Map Contacts",
  "max_blocks": 5,
  "settings": [
  {
     "type": "checkbox",
     "id": "enable_mapcontacts",
     "label": "Enable Map contacts",
     "default":true
   },
  {
     "type": "textarea",
     "id": "style_map",
     "label": "Style Map [Link custom](https://mapstyle.withgoogle.com/)",
     "info": "Link custom style https://mapstyle.withgoogle.com/"
   },
   {
     "type": "text",
     "id": "map_zoom",
     "label": "Map Zoom",
     "default": "14"
   }
  ],
  "blocks": [
    {
      "type": "text",
      "name": "Location",
      "settings": [
        {
           "type": "text",
           "id": "map_title",
           "label": "Shop Name",
           "default": "Your Shop Name"
         },
         {
           "type": "text",
           "id": "map_address",
           "label": "Shop Address",
           "default": "Your Shop Address"
         },
         {
           "type": "text",
           "id": "map_lat",
           "label": "Shop Latitude ",
           "default": "45.422230"
         },
         {
           "type": "text",
           "id": "map_long",
           "label": "Shop Longitude ",
           "default": "-75.692413"
         }
      ]
    }
  ]
}
{% endschema %}
